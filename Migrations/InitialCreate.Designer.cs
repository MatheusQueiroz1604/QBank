// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QBank.Data;

#nullable disable

namespace QBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241023142608_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QBank.Models.Account", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountId"));

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("openingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("accountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("QBank.Models.Authentication", b =>
                {
                    b.Property<int>("authenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("authenticationId"));

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("expirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("authenticationId");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("QBank.Models.BankSlip", b =>
                {
                    b.Property<int>("bankSlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bankSlipId"));

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bankSlipId");

                    b.ToTable("BankSlip");
                });

            modelBuilder.Entity("QBank.Models.CreditCard", b =>
                {
                    b.Property<int>("creditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("creditCardId"));

                    b.Property<DateTime>("approvalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<decimal>("currentBill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("limit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("creditCardId");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("QBank.Models.DebitCard", b =>
                {
                    b.Property<int>("debitCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("debitCardId"));

                    b.Property<DateTime>("approvalDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("availableBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.HasKey("debitCardId");

                    b.ToTable("DebitCard");
                });

            modelBuilder.Entity("QBank.Models.Loan", b =>
                {
                    b.Property<int>("loanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loanId"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("deadline")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("interestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("numberParcels")
                        .HasColumnType("int");

                    b.Property<DateTime>("requestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("loanId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("QBank.Models.PIX", b =>
                {
                    b.Property<int>("pixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pixId"));

                    b.Property<string>("pixKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pixKeyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pixId");

                    b.ToTable("PIX");
                });

            modelBuilder.Entity("QBank.Models.Transaction", b =>
                {
                    b.Property<int>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionId"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("bankSlipDetailsbankSlipId")
                        .HasColumnType("int");

                    b.Property<int?>("creditCardDetailscreditCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("debitCardDetailsdebitCardId")
                        .HasColumnType("int");

                    b.Property<int?>("destinationAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("loanDetailsloanId")
                        .HasColumnType("int");

                    b.Property<int>("originAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("pixDetailspixId")
                        .HasColumnType("int");

                    b.Property<string>("transactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transactionId");

                    b.HasIndex("bankSlipDetailsbankSlipId");

                    b.HasIndex("creditCardDetailscreditCardId");

                    b.HasIndex("debitCardDetailsdebitCardId");

                    b.HasIndex("loanDetailsloanId");

                    b.HasIndex("pixDetailspixId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("QBank.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("QBank.Models.Transaction", b =>
                {
                    b.HasOne("QBank.Models.BankSlip", "bankSlipDetails")
                        .WithMany()
                        .HasForeignKey("bankSlipDetailsbankSlipId");

                    b.HasOne("QBank.Models.CreditCard", "creditCardDetails")
                        .WithMany()
                        .HasForeignKey("creditCardDetailscreditCardId");

                    b.HasOne("QBank.Models.DebitCard", "debitCardDetails")
                        .WithMany()
                        .HasForeignKey("debitCardDetailsdebitCardId");

                    b.HasOne("QBank.Models.Loan", "loanDetails")
                        .WithMany()
                        .HasForeignKey("loanDetailsloanId");

                    b.HasOne("QBank.Models.PIX", "pixDetails")
                        .WithMany()
                        .HasForeignKey("pixDetailspixId");

                    b.Navigation("bankSlipDetails");

                    b.Navigation("creditCardDetails");

                    b.Navigation("debitCardDetails");

                    b.Navigation("loanDetails");

                    b.Navigation("pixDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
